I"G<p>Boosting is a well known machine learning technique, we use simple weak classifiers in cascade fashion to form a strong classifier. Itâ€™s extremely effective, facebook uses some version of this algorithm for detecting faces (99.9% accurate). Implement basic adaboost on simulated data, then for digit recognition.</p>

<!--break-->

<p>Again implementation in python using opencv and must follow blockwise execution and tutorial format.</p>

<h3 id="week-0">Week 0</h3>
<ul>
  <li>Read up on the Adaboost algorithm.</li>
  <li>Study mathematical theory.</li>
  <li>Start implementation of basic Adaboost algorithm in Python.</li>
</ul>

<h3 id="week-1">Week 1</h3>
<ul>
  <li>Finish code for Adaboost in Python.</li>
  <li>Vectorise the code using numpy. Speed up of about 10x.</li>
  <li>Read up on digit recognition via Adaboost.</li>
  <li>Begin writing code for digit recognition.</li>
  <li>Write Ipython notebook for Adaboost.</li>
</ul>

<h3 id="week-2">Week 2</h3>
<ul>
  <li>Acquire training and testing data(images and labels).</li>
  <li>Complete digit classification code.</li>
  <li>Test the digit classifier on data.</li>
  <li>Debug and optimise output and successfully implement the digit classifier.</li>
  <li>Add digit classification to the Ipython notebook.</li>
</ul>

<p>The project was completed in a little less than three weeks.
The repo for the project can be found <a href="https://github.com/riddhishb/ipython-notebooks/tree/master/Adaboost">here</a>.
The rendered iPython notebook can be found at the official <a href="https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks#statistics-machine-learning-and-data-science">iPython Wiki</a> or can be directly accessed <a href="https://nbviewer.jupyter.org/github/riddhishb/ipython-notebooks/blob/master/Adaboost/Adaboost_Final%20note.ipynb">here</a>.</p>
:ET